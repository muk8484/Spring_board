<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.1//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.myweb.notice.mapper.NoticeMapper">
<!-- 		// 1. 게시판 리스트 -->
<select id="list" resultType="com.myweb.notice.vo.NoticeVO">
	select no, title, startDate, endDate, updateDate
	from(
		select rownum rnum, no, title, startDate, endDate, updateDate
		from(
			select no, title, startDate, endDate, updateDate
			from notice
			where 1 = 1
			<include refid="search"/>
			<include refid="searchPeriod"/>
			order by updateDate desc
		)
	)
	where rnum between #{startRow} and #{endRow}
</select>		
<!-- 1-1. 게시판 리스트의 페이지 처리를 위한 전체 데이터 갯수 -->
<select id="getTotalRow" resultType="java.lang.Long">
	select count(*) from notice
	where 1=1
	<include refid="search"/>
	<include refid="searchPeriod"/>
</select>

<!-- 검색 조건 처리를 위한 태그 - 부분 태그 : sql :: 동적 쿼리 작성 -->
<sql id="search">
	<if test="word != null and word != ''.toString()">
		and (
			<if test="key == 't'.toString()">
				title like '%' || #{word} || '%'
			</if>
			<if test="key == 'c'.toString()">
				content like '%' || #{word} || '%'
			</if>
			<if test="key == 'tc'">
				title like '%' || #{word} || '%'
				or content like '%' || #{word} || '%'
			</if>
		)
	</if>
</sql>

<sql id="searchPeriod">
	and(
		<if test="period == 'pre'">
			<![CDATA[
			startDate <= sysdate and endDate >= trunc(sysdate)
			]]>
		</if>
		<if test="period == 'old'">
			<![CDATA[
			endDate < sysdate
			]]>
		</if>
		<if test="period == 'res'">
			<![CDATA[
			startDate > sysdate
			]]>
		</if>
		<if test="period == 'all'">
			<![CDATA[
			1 = 1
			]]>
		</if>
	)
</sql>

<!-- 		// 2. 게시판 글보기 -->
<select id="view" resultType="com.myweb.notice.vo.NoticeVO">
	select no, title, content, startDate, endDate, updateDate, writeDate
	from notice
	where no = #{no}
</select>

<!-- 		// 3. 게시판 글쓰기 -->
<insert id="write">
	insert into notice(no, title, content, startDate, endDate)
	values(notice_seq.nextval, #{title}, #{content}, #{startDate}, #{endDate})
</insert>

<!-- 		// 4. 게시판 글수정 -->
<update id="update">
	update notice
	set title = #{title}, content = #{content}, startDate = #{startDate}, endDate = #{endDate}, updateDate = sysdate
	where no = #{no} 
</update>

<!-- 		// 5. 게시판 글삭제 -->
<delete id="delete">
	delete from notice
	where no = #{no}
</delete>

</mapper>